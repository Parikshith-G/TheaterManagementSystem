2024-07-19 00:01:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:06:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:11:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:16:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:21:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:26:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:31:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:32:44 [reactor-http-nio-5] ERROR c.api.filter.JwtAuthenticationFilter -
				Invalid access: JWT strings must contain exactly 2 period characters. Found: 0
2024-07-19 00:32:44 [reactor-http-nio-5] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler -
				[68bb3594-280]  500 Server Error for HTTP POST "/api/v1/otp/generate"
java.lang.RuntimeException: Unauthorized access to the application
	at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/otp/generate" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
		at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
		at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.lambda$filter$0(FilteringWebHandler.java:127)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:136)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:152)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onSubscribe(MonoFilterWhen.java:100)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:207)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerComplete(FluxConcatMapNoPrefetch.java:275)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onComplete(FluxConcatMap.java:889)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2231)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:141)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2241)
		at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1176)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:240)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-19 00:36:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:40:25 [reactor-http-nio-8] ERROR c.api.filter.JwtAuthenticationFilter -
				Invalid access: JWT strings must contain exactly 2 period characters. Found: 0
2024-07-19 00:40:25 [reactor-http-nio-8] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler -
				[c15e2773-287]  500 Server Error for HTTP POST "/api/v1/otp/generate"
java.lang.RuntimeException: Unauthorized access to the application
	at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/otp/generate" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
		at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
		at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.lambda$filter$0(FilteringWebHandler.java:127)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:136)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:152)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onSubscribe(MonoFilterWhen.java:100)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:207)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerComplete(FluxConcatMapNoPrefetch.java:275)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onComplete(FluxConcatMap.java:889)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2231)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:141)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2241)
		at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1176)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:240)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-19 00:41:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:42:06 [reactor-http-nio-8] ERROR c.api.filter.JwtAuthenticationFilter -
				Invalid access: JWT strings must contain exactly 2 period characters. Found: 0
2024-07-19 00:42:06 [reactor-http-nio-8] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler -
				[c15e2773-291]  500 Server Error for HTTP POST "/api/v1/otp/generate"
java.lang.RuntimeException: Unauthorized access to the application
	at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/otp/generate" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
		at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
		at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.lambda$filter$0(FilteringWebHandler.java:127)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:136)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:152)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onSubscribe(MonoFilterWhen.java:100)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:207)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerComplete(FluxConcatMapNoPrefetch.java:275)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onComplete(FluxConcatMap.java:889)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2231)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:141)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2241)
		at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1176)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:240)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-19 00:42:13 [reactor-http-nio-8] ERROR c.api.filter.JwtAuthenticationFilter -
				Invalid access: JWT strings must contain exactly 2 period characters. Found: 0
2024-07-19 00:42:13 [reactor-http-nio-8] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler -
				[c15e2773-294]  500 Server Error for HTTP POST "/api/v1/otp/generate"
java.lang.RuntimeException: Unauthorized access to the application
	at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/otp/generate" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
		at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
		at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.lambda$filter$0(FilteringWebHandler.java:127)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:136)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:152)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onSubscribe(MonoFilterWhen.java:100)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:207)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerComplete(FluxConcatMapNoPrefetch.java:275)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onComplete(FluxConcatMap.java:889)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2231)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:141)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2241)
		at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1176)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:240)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-19 00:46:48 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:46:58 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-19 00:46:58 [Thread-15] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application APIGATEWAY with eureka with status DOWN
2024-07-19 00:46:58 [Thread-15] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721330218486, current=DOWN, previous=UP]
2024-07-19 00:46:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086: registering service...
2024-07-19 00:46:58 [Thread-15] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-19 00:46:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - registration status: 204
2024-07-19 00:46:58 [Thread-15] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-19 00:46:58 [Thread-15] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - deregister  status: 200
2024-07-19 00:46:58 [Thread-15] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-19 00:46:58 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Starting ApiGatewayApplication...
2024-07-19 00:46:58 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Starting ApiGatewayApplication using Java 22.0.1 with PID 12572 (C:\Applications_Projects\CaseStudy\ApiGateway\target\classes started by parikg in C:\Applications_Projects\CaseStudy\ApiGateway)
2024-07-19 00:46:58 [restartedMain] INFO  com.api.ApiGatewayApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-19 00:46:59 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=f266c70c-2514-33f7-9350-b8cd915b2cf9
2024-07-19 00:46:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-19 00:46:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 00:46:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-19 00:46:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 00:46:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [After]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Before]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Between]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Cookie]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Header]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Host]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Method]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Path]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Query]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [ReadBody]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [RemoteAddr]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Weight]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-07-19 00:47:00 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver -
				Exposing 1 endpoint(s) beneath base path '/actuator'
2024-07-19 00:47:00 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-19 00:47:00 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-19 00:47:00 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-19 00:47:00 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721330220801 with initial instances count: 5
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application APIGATEWAY with eureka with status UP
2024-07-19 00:47:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721330220802, current=UP, previous=STARTING]
2024-07-19 00:47:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086: registering service...
2024-07-19 00:47:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - registration status: 204
2024-07-19 00:47:00 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer -
				Netty started on port 8086
2024-07-19 00:47:00 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8086
2024-07-19 00:47:00 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Started ApiGatewayApplication in 2.334 seconds (process running for 5493.872)
2024-07-19 00:47:00 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-19 00:47:00 [restartedMain] INFO  com.api.ApiGatewayApplication -
				ApiGatewayApplication started successfully.
2024-07-19 00:47:01 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-19 00:47:01 [Thread-29] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application APIGATEWAY with eureka with status DOWN
2024-07-19 00:47:01 [Thread-29] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721330221927, current=DOWN, previous=UP]
2024-07-19 00:47:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086: registering service...
2024-07-19 00:47:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - registration status: 204
2024-07-19 00:47:01 [Thread-29] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-19 00:47:04 [Thread-29] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-19 00:47:04 [Thread-29] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - deregister  status: 200
2024-07-19 00:47:04 [Thread-29] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-19 00:47:05 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Starting ApiGatewayApplication...
2024-07-19 00:47:05 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Starting ApiGatewayApplication using Java 22.0.1 with PID 12572 (C:\Applications_Projects\CaseStudy\ApiGateway\target\classes started by parikg in C:\Applications_Projects\CaseStudy\ApiGateway)
2024-07-19 00:47:05 [restartedMain] INFO  com.api.ApiGatewayApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-19 00:47:05 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=f266c70c-2514-33f7-9350-b8cd915b2cf9
2024-07-19 00:47:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-19 00:47:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 00:47:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-19 00:47:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 00:47:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [After]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Before]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Between]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Cookie]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Header]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Host]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Method]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Path]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Query]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [ReadBody]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [RemoteAddr]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Weight]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-07-19 00:47:05 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver -
				Exposing 1 endpoint(s) beneath base path '/actuator'
2024-07-19 00:47:05 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-19 00:47:05 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-19 00:47:05 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-19 00:47:05 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721330225997 with initial instances count: 5
2024-07-19 00:47:05 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application APIGATEWAY with eureka with status UP
2024-07-19 00:47:05 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721330225997, current=UP, previous=STARTING]
2024-07-19 00:47:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086: registering service...
2024-07-19 00:47:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - registration status: 204
2024-07-19 00:47:06 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer -
				Netty started on port 8086
2024-07-19 00:47:06 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8086
2024-07-19 00:47:06 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Started ApiGatewayApplication in 1.044 seconds (process running for 5499.037)
2024-07-19 00:47:06 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-19 00:47:06 [restartedMain] INFO  com.api.ApiGatewayApplication -
				ApiGatewayApplication started successfully.
2024-07-19 00:47:15 [reactor-http-nio-2] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 00:47:51 [reactor-http-nio-2] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 00:52:05 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:56:52 [reactor-http-nio-4] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 00:57:05 [reactor-http-nio-5] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 00:57:05 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 00:57:07 [reactor-http-nio-5] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 00:57:21 [reactor-http-nio-5] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 00:58:41 [reactor-http-nio-6] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 00:58:57 [reactor-http-nio-6] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 00:59:00 [reactor-http-nio-6] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 00:59:10 [reactor-http-nio-6] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 00:59:25 [reactor-http-nio-6] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 00:59:36 [reactor-http-nio-6] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:00:08 [reactor-http-nio-7] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:00:30 [reactor-http-nio-8] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 01:00:40 [reactor-http-nio-1] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:02:05 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 01:02:09 [reactor-http-nio-2] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:02:27 [reactor-http-nio-2] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 01:02:48 [reactor-http-nio-2] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:07:05 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 01:12:05 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 01:17:05 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 01:18:01 [reactor-http-nio-3] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:18:21 [reactor-http-nio-4] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 01:18:25 [reactor-http-nio-5] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:22:05 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 01:24:31 [reactor-http-nio-3] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:24:53 [reactor-http-nio-4] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 01:24:54 [reactor-http-nio-5] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:26:11 [reactor-http-nio-7] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:26:25 [reactor-http-nio-8] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 01:27:06 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 01:32:06 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 01:34:03 [reactor-http-nio-2] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:37:06 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 01:37:39 [reactor-http-nio-3] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:37:59 [reactor-http-nio-3] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:38:19 [reactor-http-nio-3] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 01:40:23 [reactor-http-nio-3] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:40:38 [reactor-http-nio-4] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 01:42:06 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 01:43:12 [reactor-http-nio-6] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/generate
2024-07-19 01:43:26 [reactor-http-nio-6] INFO  com.api.filter.RouteValidator -
				Unsecured access: /api/v1/otp/validate
2024-07-19 01:45:16 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
2024-07-19 01:45:16 [Thread-36] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application APIGATEWAY with eureka with status DOWN
2024-07-19 01:45:16 [Thread-36] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721333716423, current=DOWN, previous=UP]
2024-07-19 01:45:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086: registering service...
2024-07-19 01:45:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - registration status: 204
2024-07-19 01:45:16 [Thread-36] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-19 01:45:20 [Thread-36] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-19 01:45:20 [Thread-36] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - deregister  status: 200
2024-07-19 01:45:20 [Thread-36] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-19 01:45:21 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Starting ApiGatewayApplication...
2024-07-19 01:45:21 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Starting ApiGatewayApplication using Java 22.0.1 with PID 12572 (C:\Applications_Projects\CaseStudy\ApiGateway\target\classes started by parikg in C:\Applications_Projects\CaseStudy\ApiGateway)
2024-07-19 01:45:21 [restartedMain] INFO  com.api.ApiGatewayApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-19 13:35:54 [background-preinit] INFO  o.h.validator.internal.util.Version -
				HV000001: Hibernate Validator 8.0.1.Final
2024-07-19 13:35:54 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Starting ApiGatewayApplication using Java 22.0.1 with PID 25256 (C:\Applications_Projects\CaseStudy\ApiGateway\target\classes started by parikg in C:\Applications_Projects\CaseStudy\ApiGateway)
2024-07-19 13:35:54 [restartedMain] INFO  com.api.ApiGatewayApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-19 13:35:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor -
				Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-19 13:35:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor -
				For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-19 13:35:56 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=f266c70c-2514-33f7-9350-b8cd915b2cf9
2024-07-19 13:35:56 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-19 13:35:56 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 13:35:56 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-19 13:35:56 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 13:35:56 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [After]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Before]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Between]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Cookie]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Header]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Host]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Method]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Path]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Query]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [ReadBody]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [RemoteAddr]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Weight]
2024-07-19 13:35:57 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-07-19 13:35:58 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver -
				Exposing 1 endpoint(s) beneath base path '/actuator'
2024-07-19 13:35:58 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-19 13:35:58 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-19 13:35:58 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-19 13:35:58 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-19 13:35:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-19 13:35:58 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 13:35:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-19 13:35:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-19 13:35:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-19 13:35:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-19 13:35:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-19 13:35:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-19 13:35:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-19 13:35:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-19 13:35:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-19 13:35:59 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-19 13:35:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721376359767 with initial instances count: 0
2024-07-19 13:35:59 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application APIGATEWAY with eureka with status UP
2024-07-19 13:35:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721376359771, current=UP, previous=STARTING]
2024-07-19 13:35:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086: registering service...
2024-07-19 13:35:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - registration status: 204
2024-07-19 13:36:00 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer -
				Netty started on port 8086
2024-07-19 13:36:00 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8086
2024-07-19 13:36:00 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Started ApiGatewayApplication in 6.893 seconds (process running for 8.19)
2024-07-19 13:36:00 [restartedMain] INFO  com.api.ApiGatewayApplication -
				ApiGatewayApplication started successfully.
2024-07-19 13:36:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-19 13:36:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-19 13:36:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-19 13:36:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-19 13:36:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-19 13:36:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: false
2024-07-19 13:36:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-19 13:36:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-19 13:37:09 [reactor-http-nio-5] ERROR c.api.filter.JwtAuthenticationFilter -
				Invalid access: JWT expired at 2024-07-19T08:06:54Z. Current time: 2024-07-19T08:07:09Z, a difference of 15400 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-07-19 13:37:09 [reactor-http-nio-4] ERROR c.api.filter.JwtAuthenticationFilter -
				Invalid access: JWT expired at 2024-07-19T08:06:54Z. Current time: 2024-07-19T08:07:09Z, a difference of 15401 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-07-19 13:37:09 [reactor-http-nio-5] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler -
				[4dec637c-58]  500 Server Error for HTTP GET "/api/v1/theaters"
java.lang.RuntimeException: Unauthorized access to the application
	at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/v1/theaters" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
		at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
		at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.lambda$filter$0(FilteringWebHandler.java:127)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:136)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:152)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onSubscribe(MonoFilterWhen.java:100)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:207)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerComplete(FluxConcatMapNoPrefetch.java:275)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onComplete(FluxConcatMap.java:889)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2231)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:141)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2241)
		at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1176)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:240)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-19 13:37:09 [reactor-http-nio-4] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler -
				[84392941-59]  500 Server Error for HTTP GET "/api/v1/shows"
java.lang.RuntimeException: Unauthorized access to the application
	at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/v1/shows" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at com.api.filter.JwtAuthenticationFilter.lambda$0(JwtAuthenticationFilter.java:66)
		at org.springframework.cloud.gateway.filter.OrderedGatewayFilter.filter(OrderedGatewayFilter.java:44)
		at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.lambda$filter$0(FilteringWebHandler.java:127)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:136)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onSubscribe(MonoPeekTerminal.java:152)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onSubscribe(MonoFilterWhen.java:100)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:207)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerComplete(FluxConcatMapNoPrefetch.java:275)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onComplete(FluxConcatMap.java:889)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2231)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:141)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.request(MonoFilterWhen.java:183)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2331)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
		at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2241)
		at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1176)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:240)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-19 13:40:58 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 13:43:55 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-19 13:43:55 [Thread-1] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application APIGATEWAY with eureka with status DOWN
2024-07-19 13:43:55 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721376835613, current=DOWN, previous=UP]
2024-07-19 13:43:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086: registering service...
2024-07-19 13:43:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - registration status: 204
2024-07-19 13:43:55 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-19 13:43:58 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-19 13:43:58 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - deregister  status: 200
2024-07-19 13:43:58 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-19 13:43:58 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Starting ApiGatewayApplication...
2024-07-19 13:43:58 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Starting ApiGatewayApplication using Java 22.0.1 with PID 25256 (C:\Applications_Projects\CaseStudy\ApiGateway\target\classes started by parikg in C:\Applications_Projects\CaseStudy\ApiGateway)
2024-07-19 13:43:58 [restartedMain] INFO  com.api.ApiGatewayApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-19 13:43:59 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=f266c70c-2514-33f7-9350-b8cd915b2cf9
2024-07-19 13:43:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-19 13:43:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 13:43:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-19 13:43:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 13:43:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [After]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Before]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Between]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Cookie]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Header]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Host]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Method]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Path]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Query]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [ReadBody]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [RemoteAddr]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [Weight]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator -
				Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-07-19 13:43:59 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver -
				Exposing 1 endpoint(s) beneath base path '/actuator'
2024-07-19 13:43:59 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-19 13:43:59 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-19 13:43:59 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-19 13:44:00 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-19 13:44:00 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721376840094 with initial instances count: 6
2024-07-19 13:44:00 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application APIGATEWAY with eureka with status UP
2024-07-19 13:44:00 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721376840095, current=UP, previous=STARTING]
2024-07-19 13:44:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086: registering service...
2024-07-19 13:44:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - registration status: 204
2024-07-19 13:44:00 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer -
				Netty started on port 8086
2024-07-19 13:44:00 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8086
2024-07-19 13:44:00 [restartedMain] INFO  com.api.ApiGatewayApplication -
				Started ApiGatewayApplication in 1.45 seconds (process running for 488.301)
2024-07-19 13:44:00 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-19 13:44:00 [restartedMain] INFO  com.api.ApiGatewayApplication -
				ApiGatewayApplication started successfully.
2024-07-19 13:49:00 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 13:50:12 [reactor-http-nio-4] WARN  o.s.c.l.core.RoundRobinLoadBalancer -
				No servers available for service: LoginRegistrationService
2024-07-19 13:50:15 [reactor-http-nio-4] WARN  o.s.c.l.core.RoundRobinLoadBalancer -
				No servers available for service: LoginRegistrationService
2024-07-19 13:50:17 [reactor-http-nio-4] WARN  o.s.c.l.core.RoundRobinLoadBalancer -
				No servers available for service: LoginRegistrationService
2024-07-19 13:54:00 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 13:59:00 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 14:04:00 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 16:47:52 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 16:52:50 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler -
				[480bdd64-514]  500 Server Error for HTTP GET "/api/v1/shows"
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:8071
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/v1/shows" [ExceptionHandlingWebHandler]
Original Stack Trace:
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1060)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-19 16:52:50 [reactor-http-nio-1] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler -
				[358bb608-512]  500 Server Error for HTTP GET "/api/v1/theaters"
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:8071
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/v1/theaters" [ExceptionHandlingWebHandler]
Original Stack Trace:
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1060)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-19 16:52:52 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-19 16:53:13 [reactor-http-nio-1] WARN  o.s.c.l.core.RoundRobinLoadBalancer -
				No servers available for service: Theater-service
2024-07-19 16:53:13 [reactor-http-nio-2] WARN  o.s.c.l.core.RoundRobinLoadBalancer -
				No servers available for service: Theater-service
2024-07-19 16:53:18 [reactor-http-nio-2] WARN  o.s.c.l.core.RoundRobinLoadBalancer -
				No servers available for service: Theater-service
2024-07-19 16:53:18 [reactor-http-nio-1] WARN  o.s.c.l.core.RoundRobinLoadBalancer -
				No servers available for service: Theater-service
2024-07-19 16:54:07 [RMI TCP Connection(56)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin -
				Application shutdown requested.
2024-07-19 16:54:07 [RMI TCP Connection(56)-127.0.0.1] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application APIGATEWAY with eureka with status DOWN
2024-07-19 16:54:07 [RMI TCP Connection(56)-127.0.0.1] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721388247261, current=DOWN, previous=UP]
2024-07-19 16:54:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086: registering service...
2024-07-19 16:54:07 [RMI TCP Connection(56)-127.0.0.1] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-19 16:54:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - registration status: 204
2024-07-19 16:54:07 [RMI TCP Connection(56)-127.0.0.1] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-19 16:54:07 [RMI TCP Connection(56)-127.0.0.1] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_APIGATEWAY/LIN-PF1JSCZH.corp.capgemini.com:ApiGateway:8086 - deregister  status: 200
2024-07-19 16:54:07 [RMI TCP Connection(56)-127.0.0.1] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
