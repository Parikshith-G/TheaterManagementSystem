2024-07-18 23:13:47 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 16076 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:13:47 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:13:48 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:13:48 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 14 ms. Found 1 JPA repository interface.
2024-07-18 23:13:48 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:13:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:13:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:13:48 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:13:48 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:13:48 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:13:48 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:13:48 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 707 ms
2024-07-18 23:13:48 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:13:48 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:13:48 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:13:48 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-2 - Starting...
2024-07-18 23:13:48 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2bbcc3c4
2024-07-18 23:13:48 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-2 - Start completed.
2024-07-18 23:13:48 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:13:48 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:13:48 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:13:48 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:13:48 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:13:48 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:13:48 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:13:49 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:13:49 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@34c02221, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7faed005, org.springframework.security.web.context.SecurityContextHolderFilter@1cffbb5f, org.springframework.security.web.header.HeaderWriterFilter@723af86a, org.springframework.web.filter.CorsFilter@5460f767, org.springframework.security.web.authentication.logout.LogoutFilter@1a6a39ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79320745, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e720a88, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@725ed2b5, org.springframework.security.web.access.ExceptionTranslationFilter@5fcf051e, org.springframework.security.web.access.intercept.AuthorizationFilter@3de37f69]
2024-07-18 23:13:49 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:13:49 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:13:49 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:13:49 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:13:49 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:13:49 [restartedMain] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.login.LoginRegistrationServiceApplication.main(LoginRegistrationServiceApplication.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 66 more

2024-07-18 23:13:49 [restartedMain] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.login.LoginRegistrationServiceApplication.main(LoginRegistrationServiceApplication.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initial registry fetch from primary servers failed
2024-07-18 23:13:49 [restartedMain] WARN  c.netflix.discovery.DiscoveryClient -
				Using default backup registry implementation which does not do anything.
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initial registry fetch from backup servers failed
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:13:49 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721324629466 with initial instances count: 0
2024-07-18 23:13:49 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:13:49 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721324629471, current=UP, previous=STARTING]
2024-07-18 23:13:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:13:49 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:13:49 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:13:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2024-07-18 23:13:49 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:13:49 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:13:49 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:13:49 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.793 seconds (process running for 290.954)
2024-07-18 23:13:49 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:13:49 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:14:04 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:14:04 [Thread-7] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:14:04 [Thread-7] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721324644369, current=DOWN, previous=UP]
2024-07-18 23:14:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:14:04 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:14:04 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-2 - Shutdown initiated...
2024-07-18 23:14:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2024-07-18 23:14:04 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:14:04 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:14:04 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:14:04 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-2 - Shutdown completed.
2024-07-18 23:14:04 [Thread-7] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:14:07 [Thread-7] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:14:07 [Thread-7] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:308)
	at org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:250)
	at org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:607)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2024-07-18 23:14:07 [Thread-7] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:14:07 [Thread-7] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:308)
	at org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:250)
	at org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:607)
2024-07-18 23:14:07 [Thread-7] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:14:07 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:14:07 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 16076 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:14:07 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:14:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:14:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 11 ms. Found 1 JPA repository interface.
2024-07-18 23:14:08 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:14:08 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:14:08 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:14:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:14:08 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:14:08 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:14:08 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:14:08 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 543 ms
2024-07-18 23:14:08 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:14:08 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:14:08 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:14:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-3 - Starting...
2024-07-18 23:14:08 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@73fd4397
2024-07-18 23:14:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-3 - Start completed.
2024-07-18 23:14:08 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:14:08 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:14:08 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:14:08 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:14:08 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:14:08 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:14:08 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:14:08 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:14:08 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3dfae931, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1da70afe, org.springframework.security.web.context.SecurityContextHolderFilter@731d1bad, org.springframework.security.web.header.HeaderWriterFilter@6c311825, org.springframework.web.filter.CorsFilter@4c5de7dc, org.springframework.security.web.authentication.logout.LogoutFilter@16f6c179, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13ff44b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6939be20, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ac7ee7e, org.springframework.security.web.access.ExceptionTranslationFilter@36d98cbb, org.springframework.security.web.access.intercept.AuthorizationFilter@5ba9a4a5]
2024-07-18 23:14:08 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:14:08 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:14:08 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:14:08 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:14:08 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:14:08 [restartedMain] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.login.LoginRegistrationServiceApplication.main(LoginRegistrationServiceApplication.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 66 more

2024-07-18 23:14:08 [restartedMain] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.login.LoginRegistrationServiceApplication.main(LoginRegistrationServiceApplication.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initial registry fetch from primary servers failed
2024-07-18 23:14:08 [restartedMain] WARN  c.netflix.discovery.DiscoveryClient -
				Using default backup registry implementation which does not do anything.
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initial registry fetch from backup servers failed
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:14:08 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721324648770 with initial instances count: 0
2024-07-18 23:14:08 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:14:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721324648772, current=UP, previous=STARTING]
2024-07-18 23:14:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:14:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:14:08 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:14:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2024-07-18 23:14:08 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:14:08 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:14:08 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:14:08 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.243 seconds (process running for 310.262)
2024-07-18 23:14:08 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:14:08 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:14:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:14:38 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 20 more

2024-07-18 23:14:38 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:14:38 [DiscoveryClient-HeartbeatExecutor-0] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 23 more

2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:14:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

2024-07-18 23:14:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2024-07-18 23:14:38 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:14:38 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:14:38 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:15:08 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 20 more

2024-07-18 23:15:08 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:15:08 [DiscoveryClient-HeartbeatExecutor-0] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 23 more

2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:15:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

2024-07-18 23:15:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:15:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2024-07-18 23:15:08 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:15:08 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:15:08 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:15:16 [RMI TCP Connection(16)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin -
				Application shutdown requested.
2024-07-18 23:15:16 [RMI TCP Connection(16)-127.0.0.1] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:15:16 [RMI TCP Connection(16)-127.0.0.1] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721324716642, current=DOWN, previous=UP]
2024-07-18 23:15:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:15:16 [RMI TCP Connection(16)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:15:16 [RMI TCP Connection(16)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-3 - Shutdown initiated...
2024-07-18 23:15:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2024-07-18 23:15:16 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:15:16 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:15:16 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:15:16 [RMI TCP Connection(16)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-3 - Shutdown completed.
2024-07-18 23:15:16 [RMI TCP Connection(16)-127.0.0.1] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:15:19 [RMI TCP Connection(16)-127.0.0.1] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:15:19 [RMI TCP Connection(16)-127.0.0.1] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient -
				Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:64)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:97)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:115)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:52)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:236)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:803)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 69 more

2024-07-18 23:15:19 [RMI TCP Connection(16)-127.0.0.1] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-18 23:15:19 [RMI TCP Connection(16)-127.0.0.1] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:64)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:97)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:115)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:52)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:236)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:803)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:15:19 [RMI TCP Connection(16)-127.0.0.1] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:15:33 [background-preinit] INFO  o.h.validator.internal.util.Version -
				HV000001: Hibernate Validator 8.0.1.Final
2024-07-18 23:15:33 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:15:33 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:15:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor -
				Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-18 23:15:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor -
				For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-18 23:15:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:15:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 396 ms. Found 1 JPA repository interface.
2024-07-18 23:15:37 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:15:38 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:15:38 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:15:39 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:15:39 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:15:39 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:15:39 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:15:39 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:15:39 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 6407 ms
2024-07-18 23:15:40 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:15:40 [restartedMain] INFO  org.hibernate.Version -
				HHH000412: Hibernate ORM core version 6.4.8.Final
2024-07-18 23:15:40 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:15:41 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:15:41 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-1 - Starting...
2024-07-18 23:15:42 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@59f2927e
2024-07-18 23:15:42 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-1 - Start completed.
2024-07-18 23:15:42 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:15:42 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:15:44 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:15:44 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:15:45 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:15:45 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:15:45 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:15:46 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:15:46 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@363ab4e8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3fca232f, org.springframework.security.web.context.SecurityContextHolderFilter@ee4f824, org.springframework.security.web.header.HeaderWriterFilter@5bc38303, org.springframework.web.filter.CorsFilter@53632a54, org.springframework.security.web.authentication.logout.LogoutFilter@43c2183e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22035e61, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@518a2373, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2176218, org.springframework.security.web.access.ExceptionTranslationFilter@f5f38e, org.springframework.security.web.access.intercept.AuthorizationFilter@58ba2868]
2024-07-18 23:15:47 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:15:47 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:15:47 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:15:47 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:15:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:15:47 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:15:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:15:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:15:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:15:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:15:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:15:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:15:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:15:48 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:15:48 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:15:48 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:15:48 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721324748063 with initial instances count: 0
2024-07-18 23:15:48 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:15:48 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721324748070, current=UP, previous=STARTING]
2024-07-18 23:15:48 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:15:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:15:48 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:15:48 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:15:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:15:48 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 16.578 seconds (process running for 20.707)
2024-07-18 23:15:48 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:16:18 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:16:18 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:16:18 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:16:18 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:16:18 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:16:18 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: false
2024-07-18 23:16:18 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:16:18 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:18:49 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 23:18:49 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet -
				Initializing Servlet 'dispatcherServlet'
2024-07-18 23:18:49 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet -
				Completed initialization in 3 ms
2024-07-18 23:18:49 [http-nio-8082-exec-1] INFO  com.login.controller.UserController -
				User login attempt: g@mail.com
2024-07-18 23:18:50 [http-nio-8082-exec-1] INFO  c.l.service.CustomUserDetailsService -
				Loading user detials for username: g@mail.com
2024-07-18 23:18:50 [http-nio-8082-exec-1] DEBUG org.hibernate.SQL -
				select u1_0.id,u1_0.created_at,u1_0.email,u1_0.name,u1_0.password,u1_0.phone,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.email=?
2024-07-18 23:18:50 [http-nio-8082-exec-1] DEBUG org.hibernate.SQL -
				select u1_0.id,u1_0.created_at,u1_0.email,u1_0.name,u1_0.password,u1_0.phone,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.email=?
2024-07-18 23:18:50 [http-nio-8082-exec-1] INFO  com.login.controller.UserController -
				User logged in successfully: g@mail.com
2024-07-18 23:18:50 [http-nio-8082-exec-1] INFO  com.login.controller.UserController -
				Generating response: Login successful
2024-07-18 23:19:03 [http-nio-8082-exec-2] ERROR c.l.exception.GlobalExceptionHandler -
				Exception: No static resource api/admin/all/eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiR09EIiwicGhvbmVOdW1iZXIiOiI5ODc2NTQzMjEiLCJpZCI6NzEsInVzZXJOYW1lIjoiZyIsImVtYWlsIjoiZ0BtYWlsLmNvbSIsInN1YiI6ImciLCJpYXQiOjE3MjEzMjQ5MzAsImV4cCI6MTcyMTMyODUzMH0.FXLBDuj-Tqn6_iX5Wz3BvywkPfK-IMz8xvRLZ7dmnaeNpt5jrxgymcUmrzEIS08VgkRcR1SRn3HF_KVwTa0YQA.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/admin/all/eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiR09EIiwicGhvbmVOdW1iZXIiOiI5ODc2NTQzMjEiLCJpZCI6NzEsInVzZXJOYW1lIjoiZyIsImVtYWlsIjoiZ0BtYWlsLmNvbSIsInN1YiI6ImciLCJpYXQiOjE3MjEzMjQ5MzAsImV4cCI6MTcyMTMyODUzMH0.FXLBDuj-Tqn6_iX5Wz3BvywkPfK-IMz8xvRLZ7dmnaeNpt5jrxgymcUmrzEIS08VgkRcR1SRn3HF_KVwTa0YQA.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:19:03 [http-nio-8082-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver -
				Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/admin/all/eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiR09EIiwicGhvbmVOdW1iZXIiOiI5ODc2NTQzMjEiLCJpZCI6NzEsInVzZXJOYW1lIjoiZyIsImVtYWlsIjoiZ0BtYWlsLmNvbSIsInN1YiI6ImciLCJpYXQiOjE3MjEzMjQ5MzAsImV4cCI6MTcyMTMyODUzMH0.FXLBDuj-Tqn6_iX5Wz3BvywkPfK-IMz8xvRLZ7dmnaeNpt5jrxgymcUmrzEIS08VgkRcR1SRn3HF_KVwTa0YQA.]
2024-07-18 23:19:15 [http-nio-8082-exec-3] ERROR c.l.exception.GlobalExceptionHandler -
				Exception: No static resource api/god/admins/eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiR09EIiwicGhvbmVOdW1iZXIiOiI5ODc2NTQzMjEiLCJpZCI6NzEsInVzZXJOYW1lIjoiZyIsImVtYWlsIjoiZ0BtYWlsLmNvbSIsInN1YiI6ImciLCJpYXQiOjE3MjEzMjQ5MzAsImV4cCI6MTcyMTMyODUzMH0.FXLBDuj-Tqn6_iX5Wz3BvywkPfK-IMz8xvRLZ7dmnaeNpt5jrxgymcUmrzEIS08VgkRcR1SRn3HF_KVwTa0YQA.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/god/admins/eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiR09EIiwicGhvbmVOdW1iZXIiOiI5ODc2NTQzMjEiLCJpZCI6NzEsInVzZXJOYW1lIjoiZyIsImVtYWlsIjoiZ0BtYWlsLmNvbSIsInN1YiI6ImciLCJpYXQiOjE3MjEzMjQ5MzAsImV4cCI6MTcyMTMyODUzMH0.FXLBDuj-Tqn6_iX5Wz3BvywkPfK-IMz8xvRLZ7dmnaeNpt5jrxgymcUmrzEIS08VgkRcR1SRn3HF_KVwTa0YQA.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:19:15 [http-nio-8082-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver -
				Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/god/admins/eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiR09EIiwicGhvbmVOdW1iZXIiOiI5ODc2NTQzMjEiLCJpZCI6NzEsInVzZXJOYW1lIjoiZyIsImVtYWlsIjoiZ0BtYWlsLmNvbSIsInN1YiI6ImciLCJpYXQiOjE3MjEzMjQ5MzAsImV4cCI6MTcyMTMyODUzMH0.FXLBDuj-Tqn6_iX5Wz3BvywkPfK-IMz8xvRLZ7dmnaeNpt5jrxgymcUmrzEIS08VgkRcR1SRn3HF_KVwTa0YQA.]
2024-07-18 23:20:47 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:22:47 [http-nio-8082-exec-5] ERROR c.l.exception.GlobalExceptionHandler -
				Exception: No static resource api/email/g@maill.com.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/email/g@maill.com.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-07-18 23:22:47 [http-nio-8082-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver -
				Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/email/g@maill.com.]
2024-07-18 23:25:47 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:25:49 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:25:49 [Thread-1] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:25:49 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721325349864, current=DOWN, previous=UP]
2024-07-18 23:25:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:25:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:25:49 [Thread-1] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:25:49 [Thread-1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:25:49 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-1 - Shutdown initiated...
2024-07-18 23:25:49 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-1 - Shutdown completed.
2024-07-18 23:25:49 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:25:52 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:25:52 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:25:52 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:25:53 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:25:53 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:25:53 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:25:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:25:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 12 ms. Found 1 JPA repository interface.
2024-07-18 23:25:53 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:25:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:25:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:25:53 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:25:53 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:25:53 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:25:53 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:25:53 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:25:53 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 815 ms
2024-07-18 23:25:53 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:25:53 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:25:53 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:25:53 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-2 - Starting...
2024-07-18 23:25:54 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4bf1655d
2024-07-18 23:25:54 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-2 - Start completed.
2024-07-18 23:25:54 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:25:54 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:25:54 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:25:54 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:25:54 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:25:54 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:25:54 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:25:54 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:25:54 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@61ac03e5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6cacdc6a, org.springframework.security.web.context.SecurityContextHolderFilter@20359b1b, org.springframework.security.web.header.HeaderWriterFilter@371c0d9a, org.springframework.web.filter.CorsFilter@4879006, org.springframework.security.web.authentication.logout.LogoutFilter@24c3d346, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@592ac23d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70b1cec4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@227fb445, org.springframework.security.web.access.ExceptionTranslationFilter@465dedf9, org.springframework.security.web.access.intercept.AuthorizationFilter@5b4fb229]
2024-07-18 23:25:54 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:25:54 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:25:54 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:25:54 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:25:54 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:25:54 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721325354726 with initial instances count: 6
2024-07-18 23:25:54 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:25:54 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721325354732, current=UP, previous=STARTING]
2024-07-18 23:25:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:25:54 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:25:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:25:54 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:25:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:25:54 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.709 seconds (process running for 627.374)
2024-07-18 23:25:54 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:25:54 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:26:35 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 23:26:35 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet -
				Initializing Servlet 'dispatcherServlet'
2024-07-18 23:26:35 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet -
				Completed initialization in 2 ms
2024-07-18 23:26:35 [http-nio-8082-exec-1] INFO  com.login.controller.UserController -
				Checking for email duplicates: ag@mail.com
2024-07-18 23:26:35 [http-nio-8082-exec-1] INFO  com.login.service.UserServiceImpl -
				Checking if email exists: ag@mail.com
2024-07-18 23:26:35 [http-nio-8082-exec-1] DEBUG org.hibernate.SQL -
				select u1_0.id,u1_0.created_at,u1_0.email,u1_0.name,u1_0.password,u1_0.phone,u1_0.role,u1_0.updated_at from user u1_0 where u1_0.email=?
2024-07-18 23:26:57 [http-nio-8082-exec-2] INFO  com.login.controller.UserController -
				Fetching all users except admins
2024-07-18 23:26:57 [http-nio-8082-exec-2] INFO  com.login.service.UserServiceImpl -
				Fetching all users except admins
2024-07-18 23:26:57 [http-nio-8082-exec-2] DEBUG org.hibernate.SQL -
				select u1_0.id,u1_0.created_at,u1_0.email,u1_0.name,u1_0.password,u1_0.phone,u1_0.role,u1_0.updated_at from user u1_0
2024-07-18 23:26:58 [http-nio-8082-exec-3] INFO  com.login.controller.UserController -
				Fetching all admins
2024-07-18 23:26:58 [http-nio-8082-exec-3] INFO  com.login.service.UserServiceImpl -
				Fetching all admin users
2024-07-18 23:26:58 [http-nio-8082-exec-3] DEBUG org.hibernate.SQL -
				select u1_0.id,u1_0.created_at,u1_0.email,u1_0.name,u1_0.password,u1_0.phone,u1_0.role,u1_0.updated_at from user u1_0
2024-07-18 23:30:54 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:35:54 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:40:54 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:45:54 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:50:40 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:50:40 [Thread-7] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:50:40 [Thread-7] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326840019, current=DOWN, previous=UP]
2024-07-18 23:50:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:50:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:50:40 [Thread-7] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:50:40 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:50:40 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-2 - Shutdown initiated...
2024-07-18 23:50:40 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-2 - Shutdown completed.
2024-07-18 23:50:40 [Thread-7] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:50:43 [Thread-7] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:50:43 [Thread-7] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:50:43 [Thread-7] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:50:43 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:50:43 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:50:43 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:50:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:50:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 18 ms. Found 1 JPA repository interface.
2024-07-18 23:50:44 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:50:44 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:50:44 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:50:44 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:50:44 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:50:44 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:50:44 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:50:44 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:50:44 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 912 ms
2024-07-18 23:50:44 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:50:44 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:50:44 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:50:44 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-3 - Starting...
2024-07-18 23:50:44 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@51f6c1dc
2024-07-18 23:50:44 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-3 - Start completed.
2024-07-18 23:50:44 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:50:44 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:50:44 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:50:44 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:50:44 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:50:44 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:50:44 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:50:44 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:50:44 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6ee304c4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2fc31fd0, org.springframework.security.web.context.SecurityContextHolderFilter@6ff9a6db, org.springframework.security.web.header.HeaderWriterFilter@2a33bc15, org.springframework.web.filter.CorsFilter@70382a4f, org.springframework.security.web.authentication.logout.LogoutFilter@562e593a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44cecd3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@206e6179, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39487690, org.springframework.security.web.access.ExceptionTranslationFilter@5a5fdb38, org.springframework.security.web.access.intercept.AuthorizationFilter@4a207333]
2024-07-18 23:50:44 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:50:44 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:50:44 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:50:45 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:50:45 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:50:45 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721326845093 with initial instances count: 6
2024-07-18 23:50:45 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:50:45 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326845095, current=UP, previous=STARTING]
2024-07-18 23:50:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:50:45 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:50:45 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:50:45 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:50:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:50:45 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.77 seconds (process running for 2117.643)
2024-07-18 23:50:45 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:50:45 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:50:52 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:50:52 [Thread-13] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:50:52 [Thread-13] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326852634, current=DOWN, previous=UP]
2024-07-18 23:50:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:50:52 [Thread-13] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:50:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:50:52 [Thread-13] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:50:52 [Thread-13] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-3 - Shutdown initiated...
2024-07-18 23:50:52 [Thread-13] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-3 - Shutdown completed.
2024-07-18 23:50:52 [Thread-13] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:50:55 [Thread-13] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:50:55 [Thread-13] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:50:55 [Thread-13] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:50:55 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:50:55 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:50:55 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:50:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:50:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 14 ms. Found 1 JPA repository interface.
2024-07-18 23:50:56 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:50:56 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:50:56 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:50:56 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:50:56 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:50:56 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:50:56 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:50:56 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:50:56 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 732 ms
2024-07-18 23:50:56 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:50:56 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:50:56 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:50:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-4 - Starting...
2024-07-18 23:50:56 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d6d5833
2024-07-18 23:50:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-4 - Start completed.
2024-07-18 23:50:56 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:50:56 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:50:56 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:50:56 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:50:56 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:50:56 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:50:56 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:50:56 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:50:56 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@506840b6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f0031a9, org.springframework.security.web.context.SecurityContextHolderFilter@61b6fc0, org.springframework.security.web.header.HeaderWriterFilter@22fee0ca, org.springframework.web.filter.CorsFilter@4131ab36, org.springframework.security.web.authentication.logout.LogoutFilter@29b2ccae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@78c7c57a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@212784ce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15a0ce06, org.springframework.security.web.access.ExceptionTranslationFilter@60c73fcb, org.springframework.security.web.access.intercept.AuthorizationFilter@7284d83e]
2024-07-18 23:50:57 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:50:57 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:50:57 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:50:57 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:50:57 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:50:57 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721326857119 with initial instances count: 6
2024-07-18 23:50:57 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:50:57 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326857121, current=UP, previous=STARTING]
2024-07-18 23:50:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:50:57 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:50:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:50:57 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:50:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:50:57 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.292 seconds (process running for 2129.659)
2024-07-18 23:50:57 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:50:57 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:50:58 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:50:58 [Thread-19] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:50:58 [Thread-19] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326858511, current=DOWN, previous=UP]
2024-07-18 23:50:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:50:58 [Thread-19] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:50:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:50:58 [Thread-19] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:50:58 [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-4 - Shutdown initiated...
2024-07-18 23:50:58 [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-4 - Shutdown completed.
2024-07-18 23:50:58 [Thread-19] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:51:01 [Thread-19] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:51:01 [Thread-19] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:51:01 [Thread-19] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:51:01 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:51:01 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:51:01 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:51:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:51:02 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.
2024-07-18 23:51:02 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:51:02 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:51:02 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:51:02 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:51:02 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:51:02 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:51:02 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:51:02 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:51:02 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 561 ms
2024-07-18 23:51:02 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:51:02 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:51:02 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:51:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-5 - Starting...
2024-07-18 23:51:02 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-5 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44439b5
2024-07-18 23:51:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-5 - Start completed.
2024-07-18 23:51:02 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:51:02 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:51:02 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:51:02 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:51:02 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:51:02 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:51:02 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:51:02 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:51:02 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@594b308e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f784432, org.springframework.security.web.context.SecurityContextHolderFilter@2e5bad57, org.springframework.security.web.header.HeaderWriterFilter@59fb31f0, org.springframework.web.filter.CorsFilter@5a70b863, org.springframework.security.web.authentication.logout.LogoutFilter@1f2322cf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6520b788, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c95d3d2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5782316e, org.springframework.security.web.access.ExceptionTranslationFilter@611d143a, org.springframework.security.web.access.intercept.AuthorizationFilter@3d161d2e]
2024-07-18 23:51:02 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:51:02 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:51:02 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:51:02 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:51:02 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:51:02 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721326862853 with initial instances count: 6
2024-07-18 23:51:02 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:51:02 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326862856, current=UP, previous=STARTING]
2024-07-18 23:51:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:51:02 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:51:02 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:51:02 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:51:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:51:02 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.194 seconds (process running for 2135.395)
2024-07-18 23:51:02 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:51:02 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:52:38 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:52:38 [Thread-25] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:52:38 [Thread-25] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326958745, current=DOWN, previous=UP]
2024-07-18 23:52:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:52:38 [Thread-25] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:52:38 [Thread-25] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:52:38 [Thread-25] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-5 - Shutdown initiated...
2024-07-18 23:52:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:52:38 [Thread-25] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-5 - Shutdown completed.
2024-07-18 23:52:38 [Thread-25] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:52:41 [Thread-25] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:52:41 [Thread-25] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:52:41 [Thread-25] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:52:41 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:52:41 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:52:41 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:52:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:52:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 12 ms. Found 1 JPA repository interface.
2024-07-18 23:52:42 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:52:42 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:52:42 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:52:42 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:52:42 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:52:42 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:52:42 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:52:42 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:52:42 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 653 ms
2024-07-18 23:52:42 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:52:42 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:52:42 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:52:42 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-6 - Starting...
2024-07-18 23:52:42 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-6 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13a2d50a
2024-07-18 23:52:42 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-6 - Start completed.
2024-07-18 23:52:42 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:52:42 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:52:42 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:52:42 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:52:42 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:52:42 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:52:42 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:52:43 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:52:43 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7898b444, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70e81359, org.springframework.security.web.context.SecurityContextHolderFilter@6117a361, org.springframework.security.web.header.HeaderWriterFilter@3c8583d8, org.springframework.web.filter.CorsFilter@20c9bb30, org.springframework.security.web.authentication.logout.LogoutFilter@597a304e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6bb0952f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15215d1e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c81aedd, org.springframework.security.web.access.ExceptionTranslationFilter@187cd27d, org.springframework.security.web.access.intercept.AuthorizationFilter@295aadd1]
2024-07-18 23:52:43 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:52:43 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:52:43 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:52:43 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:52:43 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:52:43 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721326963434 with initial instances count: 6
2024-07-18 23:52:43 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:52:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326963437, current=UP, previous=STARTING]
2024-07-18 23:52:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:52:43 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:52:43 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:52:43 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:52:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:52:43 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.531 seconds (process running for 2235.977)
2024-07-18 23:52:43 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:52:43 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:53:05 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
2024-07-18 23:53:05 [Thread-31] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:53:05 [Thread-31] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326985557, current=DOWN, previous=UP]
2024-07-18 23:53:05 [Thread-31] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:53:05 [Thread-31] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:53:05 [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-6 - Shutdown initiated...
2024-07-18 23:53:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:53:05 [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-6 - Shutdown completed.
2024-07-18 23:53:05 [Thread-31] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:53:08 [Thread-31] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:53:08 [Thread-31] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:53:08 [Thread-31] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:53:08 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:53:08 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:53:08 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:53:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:53:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 12 ms. Found 1 JPA repository interface.
2024-07-18 23:53:09 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:53:09 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:53:09 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:53:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:53:09 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:09 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:53:09 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:53:09 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:53:09 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 587 ms
2024-07-18 23:53:09 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:53:09 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:53:09 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:53:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-7 - Starting...
2024-07-18 23:53:09 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-7 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a07df8f
2024-07-18 23:53:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-7 - Start completed.
2024-07-18 23:53:09 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:53:09 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:53:09 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:53:09 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:53:09 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:53:09 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:53:09 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:53:09 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:53:09 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@690c2a9b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52bb055a, org.springframework.security.web.context.SecurityContextHolderFilter@7928f6da, org.springframework.security.web.header.HeaderWriterFilter@4b01f161, org.springframework.web.filter.CorsFilter@7eaca4b4, org.springframework.security.web.authentication.logout.LogoutFilter@6d7acede, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13540c74, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17141d33, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@368e7a1a, org.springframework.security.web.access.ExceptionTranslationFilter@587b97ea, org.springframework.security.web.access.intercept.AuthorizationFilter@69342bd0]
2024-07-18 23:53:09 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:53:09 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:53:09 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:53:09 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:53:09 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:53:09 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721326989891 with initial instances count: 6
2024-07-18 23:53:09 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:53:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721326989893, current=UP, previous=STARTING]
2024-07-18 23:53:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:53:09 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:53:09 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:53:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:53:09 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.183 seconds (process running for 2262.436)
2024-07-18 23:53:09 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:53:09 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:53:28 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:53:28 [Thread-37] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:53:28 [Thread-37] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327008276, current=DOWN, previous=UP]
2024-07-18 23:53:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:53:28 [Thread-37] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:28 [Thread-37] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:53:28 [Thread-37] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-7 - Shutdown initiated...
2024-07-18 23:53:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:53:28 [Thread-37] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-7 - Shutdown completed.
2024-07-18 23:53:28 [Thread-37] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:53:31 [Thread-37] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:53:31 [Thread-37] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:53:31 [Thread-37] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:53:31 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:53:31 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:53:31 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:53:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:53:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interface.
2024-07-18 23:53:32 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:53:32 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:53:32 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:53:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:53:32 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:32 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:53:32 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:53:32 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:53:32 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 1116 ms
2024-07-18 23:53:32 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:53:32 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:53:32 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:53:32 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-8 - Starting...
2024-07-18 23:53:32 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-8 - Added connection com.mysql.cj.jdbc.ConnectionImpl@59ea32f7
2024-07-18 23:53:32 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-8 - Start completed.
2024-07-18 23:53:32 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:53:32 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:53:32 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:53:32 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:53:32 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:53:32 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:53:32 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:53:33 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:53:33 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3cc57143, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c5436e8, org.springframework.security.web.context.SecurityContextHolderFilter@4ad07fc6, org.springframework.security.web.header.HeaderWriterFilter@77f27d43, org.springframework.web.filter.CorsFilter@31fccf0b, org.springframework.security.web.authentication.logout.LogoutFilter@4d89132, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37c10b18, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29c39102, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f06939c, org.springframework.security.web.access.ExceptionTranslationFilter@429b80f2, org.springframework.security.web.access.intercept.AuthorizationFilter@e801e86]
2024-07-18 23:53:33 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:53:33 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:53:33 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:53:33 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:53:33 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:53:33 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327013289 with initial instances count: 6
2024-07-18 23:53:33 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:53:33 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327013296, current=UP, previous=STARTING]
2024-07-18 23:53:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:53:33 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:33 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:53:33 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:53:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:53:33 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.873 seconds (process running for 2285.869)
2024-07-18 23:53:33 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:53:33 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:53:51 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:53:51 [Thread-43] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:53:51 [Thread-43] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327031302, current=DOWN, previous=UP]
2024-07-18 23:53:51 [Thread-43] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:53:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:53:51 [Thread-43] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:53:51 [Thread-43] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-8 - Shutdown initiated...
2024-07-18 23:53:51 [Thread-43] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-8 - Shutdown completed.
2024-07-18 23:53:51 [Thread-43] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:53:54 [Thread-43] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:53:54 [Thread-43] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:53:54 [Thread-43] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:53:54 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:53:54 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:53:54 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:53:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:53:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 20 ms. Found 1 JPA repository interface.
2024-07-18 23:53:55 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:53:55 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:53:55 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:53:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:53:55 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:55 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:53:55 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:53:55 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:53:55 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 904 ms
2024-07-18 23:53:55 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:53:55 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:53:55 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:53:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-9 - Starting...
2024-07-18 23:53:55 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-9 - Added connection com.mysql.cj.jdbc.ConnectionImpl@394106fe
2024-07-18 23:53:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-9 - Start completed.
2024-07-18 23:53:55 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:53:55 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:53:55 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:53:55 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:53:55 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:53:55 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:53:55 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:53:55 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:53:55 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@77a4a3d2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@626739cc, org.springframework.security.web.context.SecurityContextHolderFilter@56fd9343, org.springframework.security.web.header.HeaderWriterFilter@c809f28, org.springframework.web.filter.CorsFilter@51947e1e, org.springframework.security.web.authentication.logout.LogoutFilter@dc302a8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6982ccc1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f6f4999, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12939f55, org.springframework.security.web.access.ExceptionTranslationFilter@5d617b4b, org.springframework.security.web.access.intercept.AuthorizationFilter@373e9f56]
2024-07-18 23:53:55 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:53:56 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:53:56 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:53:56 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:53:56 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:53:56 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327036076 with initial instances count: 6
2024-07-18 23:53:56 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:53:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327036078, current=UP, previous=STARTING]
2024-07-18 23:53:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:53:56 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:56 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:53:56 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:53:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:53:56 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.656 seconds (process running for 2308.623)
2024-07-18 23:53:56 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:53:56 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:53:59 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
2024-07-18 23:53:59 [Thread-49] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:53:59 [Thread-49] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327039521, current=DOWN, previous=UP]
2024-07-18 23:53:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:53:59 [Thread-49] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:53:59 [Thread-49] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:53:59 [Thread-49] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-9 - Shutdown initiated...
2024-07-18 23:53:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:53:59 [Thread-49] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-9 - Shutdown completed.
2024-07-18 23:53:59 [Thread-49] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:54:02 [Thread-49] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:54:02 [Thread-49] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:54:02 [Thread-49] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:54:02 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:54:02 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:54:02 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:54:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:54:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 18 ms. Found 1 JPA repository interface.
2024-07-18 23:54:03 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:54:03 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:54:03 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:54:03 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:54:03 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:54:03 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:54:03 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:54:03 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:54:03 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 832 ms
2024-07-18 23:54:03 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:54:03 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:54:03 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:54:03 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-10 - Starting...
2024-07-18 23:54:03 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-10 - Added connection com.mysql.cj.jdbc.ConnectionImpl@786ed4d1
2024-07-18 23:54:03 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-10 - Start completed.
2024-07-18 23:54:03 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:54:03 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:54:03 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:54:03 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:54:03 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:54:03 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:54:03 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:54:03 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:54:03 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4d0a8f36, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@65afd236, org.springframework.security.web.context.SecurityContextHolderFilter@3f07783, org.springframework.security.web.header.HeaderWriterFilter@41d03197, org.springframework.web.filter.CorsFilter@2c05894b, org.springframework.security.web.authentication.logout.LogoutFilter@1cc68968, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@336883a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c966789, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@26efa025, org.springframework.security.web.access.ExceptionTranslationFilter@80ce3a0, org.springframework.security.web.access.intercept.AuthorizationFilter@401dc22]
2024-07-18 23:54:04 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:54:04 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:54:04 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:54:04 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:54:04 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:54:04 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327044218 with initial instances count: 6
2024-07-18 23:54:04 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:54:04 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327044221, current=UP, previous=STARTING]
2024-07-18 23:54:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:54:04 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:54:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:54:04 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:54:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:54:04 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.556 seconds (process running for 2316.777)
2024-07-18 23:54:04 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:54:04 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:54:55 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:54:55 [Thread-55] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:54:55 [Thread-55] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327095149, current=DOWN, previous=UP]
2024-07-18 23:54:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:54:55 [Thread-55] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:54:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:54:55 [Thread-55] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:54:55 [Thread-55] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-10 - Shutdown initiated...
2024-07-18 23:54:55 [Thread-55] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-10 - Shutdown completed.
2024-07-18 23:54:55 [Thread-55] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:54:58 [Thread-55] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:54:58 [Thread-55] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:54:58 [Thread-55] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:54:58 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:54:58 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:54:58 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:54:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:54:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 18 ms. Found 1 JPA repository interface.
2024-07-18 23:54:59 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:54:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:54:59 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:54:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:54:59 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:54:59 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:54:59 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:54:59 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:54:59 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 784 ms
2024-07-18 23:54:59 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:54:59 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:54:59 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:54:59 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-11 - Starting...
2024-07-18 23:54:59 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-11 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7fff2461
2024-07-18 23:54:59 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-11 - Start completed.
2024-07-18 23:54:59 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:54:59 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:54:59 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:54:59 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:54:59 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:54:59 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:54:59 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:54:59 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:54:59 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30619a4e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@198bf281, org.springframework.security.web.context.SecurityContextHolderFilter@552f2974, org.springframework.security.web.header.HeaderWriterFilter@3fd52215, org.springframework.web.filter.CorsFilter@3fbb43b8, org.springframework.security.web.authentication.logout.LogoutFilter@4bac5dee, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@236a805f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7137fd56, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4bf6b625, org.springframework.security.web.access.ExceptionTranslationFilter@9bb6692, org.springframework.security.web.access.intercept.AuthorizationFilter@7220d331]
2024-07-18 23:54:59 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:54:59 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:54:59 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:54:59 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:54:59 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:54:59 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327099959 with initial instances count: 6
2024-07-18 23:54:59 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:54:59 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327099961, current=UP, previous=STARTING]
2024-07-18 23:54:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:54:59 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:54:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:54:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:54:59 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:54:59 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.649 seconds (process running for 2372.518)
2024-07-18 23:54:59 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:54:59 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:55:35 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:55:35 [Thread-61] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:55:35 [Thread-61] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327135701, current=DOWN, previous=UP]
2024-07-18 23:55:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:55:35 [Thread-61] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:55:35 [Thread-61] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:55:35 [Thread-61] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-11 - Shutdown initiated...
2024-07-18 23:55:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:55:35 [Thread-61] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-11 - Shutdown completed.
2024-07-18 23:55:35 [Thread-61] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:55:38 [Thread-61] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:55:38 [Thread-61] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:55:38 [Thread-61] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:55:38 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:55:38 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:55:38 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:55:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:55:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 37 ms. Found 1 JPA repository interface.
2024-07-18 23:55:39 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:55:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:55:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:55:39 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:55:39 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:55:39 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:55:39 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:55:39 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:55:39 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 998 ms
2024-07-18 23:55:39 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:55:39 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:55:39 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:55:39 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-12 - Starting...
2024-07-18 23:55:39 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-12 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3947c4ef
2024-07-18 23:55:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-12 - Start completed.
2024-07-18 23:55:40 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:55:40 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:55:40 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:55:40 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:55:40 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:55:40 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:55:40 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:55:40 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:55:40 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28149228, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@497eb230, org.springframework.security.web.context.SecurityContextHolderFilter@48b48973, org.springframework.security.web.header.HeaderWriterFilter@1a47454d, org.springframework.web.filter.CorsFilter@44326b12, org.springframework.security.web.authentication.logout.LogoutFilter@11fe0eb4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38297d2a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d20a4bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b3c4636, org.springframework.security.web.access.ExceptionTranslationFilter@87da222, org.springframework.security.web.access.intercept.AuthorizationFilter@3a10b426]
2024-07-18 23:55:40 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:55:40 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:55:40 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:55:40 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:55:40 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:55:40 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327140527 with initial instances count: 6
2024-07-18 23:55:40 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:55:40 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327140531, current=UP, previous=STARTING]
2024-07-18 23:55:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:55:40 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:55:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:55:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:55:40 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:55:40 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.709 seconds (process running for 2413.101)
2024-07-18 23:55:40 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:55:40 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:55:42 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:55:42 [Thread-67] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:55:42 [Thread-67] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327142898, current=DOWN, previous=UP]
2024-07-18 23:55:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:55:42 [Thread-67] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:55:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:55:42 [Thread-67] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:55:42 [Thread-67] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-12 - Shutdown initiated...
2024-07-18 23:55:42 [Thread-67] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-12 - Shutdown completed.
2024-07-18 23:55:42 [Thread-67] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:55:45 [Thread-67] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:55:45 [Thread-67] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:55:45 [Thread-67] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:55:46 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:55:46 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:55:46 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:55:46 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:55:46 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 41 ms. Found 1 JPA repository interface.
2024-07-18 23:55:46 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:55:46 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:55:46 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:55:46 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:55:46 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:55:46 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:55:46 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:55:46 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:55:46 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 746 ms
2024-07-18 23:55:46 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:55:46 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:55:46 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:55:46 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-13 - Starting...
2024-07-18 23:55:46 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-13 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5853f0d6
2024-07-18 23:55:46 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-13 - Start completed.
2024-07-18 23:55:46 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:55:46 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:55:46 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:55:46 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:55:47 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:55:47 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:55:47 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:55:47 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:55:47 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@10f1ac7f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@788772a4, org.springframework.security.web.context.SecurityContextHolderFilter@540ea8a4, org.springframework.security.web.header.HeaderWriterFilter@54eb555f, org.springframework.web.filter.CorsFilter@786114ed, org.springframework.security.web.authentication.logout.LogoutFilter@1b4e6a17, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2cdade56, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34eb5410, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a7ff3f4, org.springframework.security.web.access.ExceptionTranslationFilter@4f5aee6b, org.springframework.security.web.access.intercept.AuthorizationFilter@fb9bca1]
2024-07-18 23:55:47 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:55:47 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:55:47 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:55:47 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:55:47 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:55:47 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327147379 with initial instances count: 6
2024-07-18 23:55:47 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:55:47 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327147382, current=UP, previous=STARTING]
2024-07-18 23:55:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:55:47 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:55:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:55:47 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:55:47 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:55:47 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.357 seconds (process running for 2419.93)
2024-07-18 23:55:47 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:55:47 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:57:41 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
2024-07-18 23:57:41 [Thread-73] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:57:41 [Thread-73] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327261620, current=DOWN, previous=UP]
2024-07-18 23:57:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:57:41 [Thread-73] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:57:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:57:41 [Thread-73] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:57:41 [Thread-73] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-13 - Shutdown initiated...
2024-07-18 23:57:41 [Thread-73] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-13 - Shutdown completed.
2024-07-18 23:57:41 [Thread-73] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:57:44 [Thread-73] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:57:44 [Thread-73] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:57:44 [Thread-73] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:57:44 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:57:44 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:57:44 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:57:45 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:57:45 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.
2024-07-18 23:57:45 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:57:45 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:57:45 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:57:45 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:57:45 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:57:45 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:57:45 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:57:45 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:57:45 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 684 ms
2024-07-18 23:57:45 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:57:45 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:57:45 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:57:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-14 - Starting...
2024-07-18 23:57:45 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-14 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6fea7e8f
2024-07-18 23:57:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-14 - Start completed.
2024-07-18 23:57:45 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:57:45 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:57:45 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:57:45 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:57:45 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:57:45 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:57:45 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:57:46 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:57:46 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3b3ee2b9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63cd83d0, org.springframework.security.web.context.SecurityContextHolderFilter@56e3ae4d, org.springframework.security.web.header.HeaderWriterFilter@6fe013e2, org.springframework.web.filter.CorsFilter@2af7d881, org.springframework.security.web.authentication.logout.LogoutFilter@52815543, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@bf1d4c3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@764b73cb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9ffe6d9, org.springframework.security.web.access.ExceptionTranslationFilter@78f4907, org.springframework.security.web.access.intercept.AuthorizationFilter@7aab3006]
2024-07-18 23:57:46 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:57:46 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:57:46 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:57:46 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:57:46 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:57:46 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327266287 with initial instances count: 6
2024-07-18 23:57:46 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:57:46 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327266290, current=UP, previous=STARTING]
2024-07-18 23:57:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:57:46 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:57:46 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:57:46 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:57:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:57:46 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.612 seconds (process running for 2538.896)
2024-07-18 23:57:46 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:57:46 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:57:47 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:57:47 [Thread-79] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:57:47 [Thread-79] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327267587, current=DOWN, previous=UP]
2024-07-18 23:57:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:57:47 [Thread-79] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:57:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:57:47 [Thread-79] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:57:47 [Thread-79] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-14 - Shutdown initiated...
2024-07-18 23:57:47 [Thread-79] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-14 - Shutdown completed.
2024-07-18 23:57:47 [Thread-79] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:57:50 [Thread-79] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:57:50 [Thread-79] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:57:50 [Thread-79] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:57:50 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:57:50 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:57:50 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:57:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:57:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 17 ms. Found 1 JPA repository interface.
2024-07-18 23:57:51 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:57:51 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:57:51 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:57:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:57:51 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:57:51 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:57:51 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:57:51 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:57:51 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 692 ms
2024-07-18 23:57:51 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:57:51 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:57:51 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:57:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-15 - Starting...
2024-07-18 23:57:51 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-15 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4bc3fde3
2024-07-18 23:57:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-15 - Start completed.
2024-07-18 23:57:51 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:57:51 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:57:51 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:57:51 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:57:51 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:57:51 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:57:51 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:57:51 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:57:51 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ae0aa62, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4dfcbce5, org.springframework.security.web.context.SecurityContextHolderFilter@4be30a9c, org.springframework.security.web.header.HeaderWriterFilter@790282cb, org.springframework.web.filter.CorsFilter@3571a908, org.springframework.security.web.authentication.logout.LogoutFilter@cfb6615, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1274e851, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3266e8cd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@654a8a31, org.springframework.security.web.access.ExceptionTranslationFilter@93520e2, org.springframework.security.web.access.intercept.AuthorizationFilter@3c5d86d9]
2024-07-18 23:57:52 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:57:52 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:57:52 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:57:52 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:57:52 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:57:52 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327272207 with initial instances count: 6
2024-07-18 23:57:52 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:57:52 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327272209, current=UP, previous=STARTING]
2024-07-18 23:57:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:57:52 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:57:52 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:57:52 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:57:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:57:52 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.419 seconds (process running for 2544.748)
2024-07-18 23:57:52 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:57:52 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:57:54 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:57:54 [Thread-85] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:57:54 [Thread-85] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327274419, current=DOWN, previous=UP]
2024-07-18 23:57:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:57:54 [Thread-85] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:57:54 [Thread-85] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:57:54 [Thread-85] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-15 - Shutdown initiated...
2024-07-18 23:57:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:57:54 [Thread-85] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-15 - Shutdown completed.
2024-07-18 23:57:54 [Thread-85] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:57:57 [Thread-85] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:57:57 [Thread-85] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:57:57 [Thread-85] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:57:57 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:57:57 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:57:57 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:57:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:57:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 17 ms. Found 1 JPA repository interface.
2024-07-18 23:57:57 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:57:58 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:57:58 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:57:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:57:58 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:57:58 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:57:58 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:57:58 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:57:58 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 520 ms
2024-07-18 23:57:58 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:57:58 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:57:58 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:57:58 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-16 - Starting...
2024-07-18 23:57:58 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-16 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5fcfb326
2024-07-18 23:57:58 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-16 - Start completed.
2024-07-18 23:57:58 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:57:58 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:57:58 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:57:58 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:57:58 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:57:58 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:57:58 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:57:58 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:57:58 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@44924976, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ac13448, org.springframework.security.web.context.SecurityContextHolderFilter@2b738c5a, org.springframework.security.web.header.HeaderWriterFilter@1da7272c, org.springframework.web.filter.CorsFilter@532f41f7, org.springframework.security.web.authentication.logout.LogoutFilter@29eaf8f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a2eae1d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a76680e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4ac8f006, org.springframework.security.web.access.ExceptionTranslationFilter@53507b05, org.springframework.security.web.access.intercept.AuthorizationFilter@3f94dd41]
2024-07-18 23:57:58 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:57:58 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:57:58 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:57:58 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:57:58 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:57:58 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327278873 with initial instances count: 6
2024-07-18 23:57:58 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:57:58 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327278875, current=UP, previous=STARTING]
2024-07-18 23:57:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:57:58 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:57:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:57:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:57:58 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:57:58 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.345 seconds (process running for 2551.425)
2024-07-18 23:57:58 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:57:58 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:58:10 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:58:10 [Thread-91] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:58:10 [Thread-91] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327290530, current=DOWN, previous=UP]
2024-07-18 23:58:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:58:10 [Thread-91] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:58:10 [Thread-91] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:58:10 [Thread-91] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-16 - Shutdown initiated...
2024-07-18 23:58:10 [Thread-91] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-16 - Shutdown completed.
2024-07-18 23:58:10 [Thread-91] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:58:13 [Thread-91] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:58:13 [Thread-91] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:58:13 [Thread-91] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:58:13 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:58:13 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:58:13 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:58:14 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:58:14 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 17 ms. Found 1 JPA repository interface.
2024-07-18 23:58:14 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:58:14 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:58:14 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:58:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:58:14 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:14 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:58:14 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:58:14 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:58:14 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 559 ms
2024-07-18 23:58:14 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:58:14 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:58:14 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:58:14 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-17 - Starting...
2024-07-18 23:58:14 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-17 - Added connection com.mysql.cj.jdbc.ConnectionImpl@57c7e25b
2024-07-18 23:58:14 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-17 - Start completed.
2024-07-18 23:58:14 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:58:14 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:58:14 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:58:14 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:58:14 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:58:14 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:58:14 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:58:14 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:58:14 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@203385ee, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@13ec954a, org.springframework.security.web.context.SecurityContextHolderFilter@f681fdb, org.springframework.security.web.header.HeaderWriterFilter@2eb8fb9f, org.springframework.web.filter.CorsFilter@15a64a36, org.springframework.security.web.authentication.logout.LogoutFilter@62aa38ca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5572bb94, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44fe036b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ad7ed91, org.springframework.security.web.access.ExceptionTranslationFilter@762cfee, org.springframework.security.web.access.intercept.AuthorizationFilter@16153b68]
2024-07-18 23:58:14 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:58:14 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:58:14 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:58:14 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:58:14 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:58:14 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327294881 with initial instances count: 6
2024-07-18 23:58:14 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:58:14 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327294885, current=UP, previous=STARTING]
2024-07-18 23:58:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:58:14 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:58:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:58:14 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:58:14 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.177 seconds (process running for 2567.436)
2024-07-18 23:58:14 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:58:14 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:58:27 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:58:27 [Thread-97] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:58:27 [Thread-97] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327307755, current=DOWN, previous=UP]
2024-07-18 23:58:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:58:27 [Thread-97] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:27 [Thread-97] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:58:27 [Thread-97] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-17 - Shutdown initiated...
2024-07-18 23:58:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:58:27 [Thread-97] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-17 - Shutdown completed.
2024-07-18 23:58:27 [Thread-97] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:58:30 [Thread-97] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:58:30 [Thread-97] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:58:30 [Thread-97] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:58:30 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:58:30 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:58:30 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:58:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:58:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 11 ms. Found 1 JPA repository interface.
2024-07-18 23:58:31 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:58:31 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:58:31 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:58:31 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:58:31 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:31 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:58:31 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:58:31 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:58:31 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 604 ms
2024-07-18 23:58:31 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:58:31 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:58:31 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:58:31 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-18 - Starting...
2024-07-18 23:58:31 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-18 - Added connection com.mysql.cj.jdbc.ConnectionImpl@461e08c2
2024-07-18 23:58:31 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-18 - Start completed.
2024-07-18 23:58:31 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:58:31 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:58:31 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:58:31 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:58:31 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:58:31 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:58:31 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:58:31 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:58:31 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2df10fa4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31b426ef, org.springframework.security.web.context.SecurityContextHolderFilter@65b72616, org.springframework.security.web.header.HeaderWriterFilter@2c864978, org.springframework.web.filter.CorsFilter@1c7781cd, org.springframework.security.web.authentication.logout.LogoutFilter@1371f500, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12c51bce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@51f9b3bb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d47c677, org.springframework.security.web.access.ExceptionTranslationFilter@67549578, org.springframework.security.web.access.intercept.AuthorizationFilter@35288d31]
2024-07-18 23:58:31 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:58:32 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:58:32 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:58:32 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:58:32 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:58:32 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327312152 with initial instances count: 6
2024-07-18 23:58:32 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:58:32 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327312155, current=UP, previous=STARTING]
2024-07-18 23:58:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:58:32 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:58:32 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:58:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:58:32 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.294 seconds (process running for 2584.699)
2024-07-18 23:58:32 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:58:32 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:58:33 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:58:33 [Thread-103] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:58:33 [Thread-103] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327313450, current=DOWN, previous=UP]
2024-07-18 23:58:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:58:33 [Thread-103] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:58:33 [Thread-103] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:58:33 [Thread-103] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-18 - Shutdown initiated...
2024-07-18 23:58:33 [Thread-103] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-18 - Shutdown completed.
2024-07-18 23:58:33 [Thread-103] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:58:36 [Thread-103] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:58:36 [Thread-103] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:58:36 [Thread-103] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:58:36 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:58:36 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:58:36 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:58:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:58:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.
2024-07-18 23:58:37 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:58:37 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:58:37 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:58:37 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:58:37 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:37 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:58:37 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:58:37 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:58:37 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 529 ms
2024-07-18 23:58:37 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:58:37 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:58:37 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:58:37 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-19 - Starting...
2024-07-18 23:58:37 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-19 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d5e7610
2024-07-18 23:58:37 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-19 - Start completed.
2024-07-18 23:58:37 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:58:37 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:58:37 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:58:37 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:58:37 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:58:37 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:58:37 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:58:37 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:58:37 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7964355f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f47a6e2, org.springframework.security.web.context.SecurityContextHolderFilter@1637e4c9, org.springframework.security.web.header.HeaderWriterFilter@23860d07, org.springframework.web.filter.CorsFilter@4a943fe0, org.springframework.security.web.authentication.logout.LogoutFilter@61ecf928, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35fa12b5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ba99d00, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ed0420d, org.springframework.security.web.access.ExceptionTranslationFilter@89cc43e, org.springframework.security.web.access.intercept.AuthorizationFilter@13b0ec0b]
2024-07-18 23:58:37 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:58:37 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:58:37 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:58:37 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:58:37 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:58:37 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327317716 with initial instances count: 6
2024-07-18 23:58:37 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:58:37 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327317717, current=UP, previous=STARTING]
2024-07-18 23:58:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:58:37 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:58:37 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:58:37 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:58:37 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.076 seconds (process running for 2590.264)
2024-07-18 23:58:37 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:58:37 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
2024-07-18 23:58:39 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener -
				Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-18 23:58:39 [Thread-109] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Unregistering application LOGINREGISTRATIONSERVICE with eureka with status DOWN
2024-07-18 23:58:39 [Thread-109] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327319100, current=DOWN, previous=UP]
2024-07-18 23:58:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:58:39 [Thread-109] INFO  o.a.coyote.http11.Http11NioProtocol -
				Stopping ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:58:39 [Thread-109] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:58:39 [Thread-109] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-19 - Shutdown initiated...
2024-07-18 23:58:39 [Thread-109] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-19 - Shutdown completed.
2024-07-18 23:58:39 [Thread-109] INFO  c.netflix.discovery.DiscoveryClient -
				Shutting down DiscoveryClient ...
2024-07-18 23:58:42 [Thread-109] INFO  c.netflix.discovery.DiscoveryClient -
				Unregistering ...
2024-07-18 23:58:42 [Thread-109] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - deregister  status: 200
2024-07-18 23:58:42 [Thread-109] INFO  c.netflix.discovery.DiscoveryClient -
				Completed shut down of DiscoveryClient
2024-07-18 23:58:42 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting Login Registration Service Application...
2024-07-18 23:58:42 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Starting LoginRegistrationServiceApplication using Java 22.0.1 with PID 27916 (C:\Applications_Projects\CaseStudy\LoginRegistrationService\target\classes started by parikg in C:\Applications_Projects\CaseStudy\LoginRegistrationService)
2024-07-18 23:58:42 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				No active profile set, falling back to 1 default profile: "default"
2024-07-18 23:58:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 23:58:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate -
				Finished Spring Data repository scanning in 15 ms. Found 1 JPA repository interface.
2024-07-18 23:58:42 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope -
				BeanFactory id=e0ba2277-152e-3217-a80a-2316a9f452fd
2024-07-18 23:58:42 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-18 23:58:42 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -
				Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-18 23:58:42 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat initialized with port 8082 (http)
2024-07-18 23:58:42 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Initializing ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:42 [restartedMain] INFO  o.a.catalina.core.StandardService -
				Starting service [Tomcat]
2024-07-18 23:58:42 [restartedMain] INFO  o.a.catalina.core.StandardEngine -
				Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 23:58:43 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] -
				Initializing Spring embedded WebApplicationContext
2024-07-18 23:58:43 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext -
				Root WebApplicationContext: initialization completed in 650 ms
2024-07-18 23:58:43 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper -
				HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-18 23:58:43 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator -
				HHH000026: Second-level cache disabled
2024-07-18 23:58:43 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo -
				No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 23:58:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-20 - Starting...
2024-07-18 23:58:43 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool -
				HikariPool-20 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5c349b98
2024-07-18 23:58:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource -
				HikariPool-20 - Start completed.
2024-07-18 23:58:43 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-18 23:58:43 [restartedMain] WARN  org.hibernate.orm.deprecation -
				HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-18 23:58:43 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator -
				HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-18 23:58:43 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean -
				Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 23:58:43 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				DaoAuthenticationProvider configured successfully
2024-07-18 23:58:43 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				AuthenticationManager configured successfully
2024-07-18 23:58:43 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 23:58:43 [restartedMain] INFO  c.login.configuration.SecurityConfig -
				SecurityFilterChain configured successfully
2024-07-18 23:58:43 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain -
				Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5ef8818e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d277fc8, org.springframework.security.web.context.SecurityContextHolderFilter@50b74064, org.springframework.security.web.header.HeaderWriterFilter@542f7f64, org.springframework.web.filter.CorsFilter@6cf2ed5d, org.springframework.security.web.authentication.logout.LogoutFilter@616259c0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1dca3d3b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24c71310, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f2f2409, org.springframework.security.web.access.ExceptionTranslationFilter@5fbcc10b, org.springframework.security.web.access.intercept.AuthorizationFilter@31ce5a10]
2024-07-18 23:58:43 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer -
				Unable to start LiveReload server
2024-07-18 23:58:43 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration -
				Eureka HTTP Client uses RestTemplate.
2024-07-18 23:58:43 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-18 23:58:43 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory -
				Setting initial instance status as: STARTING
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Initializing Eureka in region us-east-1
2024-07-18 23:58:43 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver -
				Resolving eureka endpoints via configuration
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Disable delta property : false
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Single vip registry refresh property : null
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Force full registry fetch : false
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application is null : false
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Registered Applications size is zero : true
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Application version is -1: true
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Getting all instance registry info from the eureka server
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				The response status is 200
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Starting heartbeat executor: renew interval is: 30
2024-07-18 23:58:43 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator -
				InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Discovery Client initialized at timestamp 1721327323608 with initial instances count: 6
2024-07-18 23:58:43 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry -
				Registering application LOGINREGISTRATIONSERVICE with eureka with status UP
2024-07-18 23:58:43 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient -
				Saw local status change event StatusChangeEvent [timestamp=1721327323610, current=UP, previous=STARTING]
2024-07-18 23:58:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082: registering service...
2024-07-18 23:58:43 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol -
				Starting ProtocolHandler ["http-nio-8082"]
2024-07-18 23:58:43 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer -
				Tomcat started on port 8082 (http) with context path ''
2024-07-18 23:58:43 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration -
				Updating port to 8082
2024-07-18 23:58:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_LOGINREGISTRATIONSERVICE/LIN-PF1JSCZH.corp.capgemini.com:LoginRegistrationService:8082 - registration status: 204
2024-07-18 23:58:43 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Started LoginRegistrationServiceApplication in 1.284 seconds (process running for 2596.148)
2024-07-18 23:58:43 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -
				Condition evaluation unchanged
2024-07-18 23:58:43 [restartedMain] INFO  c.l.LoginRegistrationServiceApplication -
				Login Registration Service Application started successfully.
